{
	"info": {
		"_postman_id": "0478cdc2-e838-4ad9-8628-0f50946a8663",
		"name": "restful-booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39863995"
	},
	"item": [
		{
			"name": "POST - Auth - CreateToken",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {\r",
							"    const token = pm.response.json().token;\r",
							"    pm.collectionVariables.set(\"auth_token\", token);\r",
							"     console.log(\"Token saved:\", token);\r",
							"}\r",
							"\r",
							"\r",
							"// Проверки ->\r",
							"\r",
							"// Проверяем, что код ответа 200 (успешная авторизация)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверяем, что тело ответа содержит токен\r",
							"pm.test(\"Response has token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"token\");\r",
							"    pm.expect(jsonData.token).to.be.a(\"string\").and.to.have.length.above(0);\r",
							"});\r",
							"\r",
							"// Проверяем, что Content-Type — application/json\r",
							"pm.test(\"Content-Type is JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"// Проверяем, что токен сохраняется в коллекционные переменные\r",
							"pm.test(\"Token is saved in collection variables\", function () {\r",
							"    const token = pm.collectionVariables.get(\"auth_token\");\r",
							"    pm.expect(token).to.be.a(\"string\").and.to.have.length.above(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth/",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth",
						""
					]
				},
				"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/auth \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}'"
			},
			"response": []
		},
		{
			"name": "POST - Booking - CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    if (responseData.booking && responseData.bookingid) {\r",
							"        const { firstname, lastname } = responseData.booking;\r",
							"        const bookingid = responseData.bookingid;\r",
							"\r",
							"    pm.collectionVariables.set(\"var_firstname\", firstname);\r",
							"    pm.collectionVariables.set(\"var_lastname\", lastname);\r",
							"    pm.collectionVariables.set(\"var_bookingid\", bookingid);\r",
							"\r",
							"    console.log(\"Variables saved:\", { firstname, lastname, bookingid });\r",
							"    } else {\r",
							"        console.log (\"Error: Missing expected fields.\");\r",
							"    }\r",
							"} else {\r",
							"    console.log(\"Error while getting variables, Response Code:\", pm.response.code);\r",
							"}\r",
							"\r",
							"\r",
							"// Проверки ->\r",
							"\r",
							"// Проверяем, что код ответа 200 (успешное создание бронирования)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверяем, что тело ответа содержит bookingid и booking\r",
							"pm.test(\"Response contains bookingid and booking object\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"bookingid\");\r",
							"    pm.expect(jsonData.booking).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"// Проверяем, что данные бронирования совпадают с отправленными\r",
							"pm.test(\"Booking details are correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const requestData = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"    pm.expect(jsonData.booking.firstname).to.eql(requestData.firstname);\r",
							"    pm.expect(jsonData.booking.lastname).to.eql(requestData.lastname);\r",
							"    pm.expect(jsonData.booking.totalprice).to.eql(requestData.totalprice);\r",
							"    pm.expect(jsonData.booking.depositpaid).to.eql(requestData.depositpaid);\r",
							"    pm.expect(jsonData.booking.bookingdates.checkin).to.eql(requestData.bookingdates.checkin);\r",
							"    pm.expect(jsonData.booking.bookingdates.checkout).to.eql(requestData.bookingdates.checkout);\r",
							"    pm.expect(jsonData.booking.additionalneeds).to.eql(requestData.additionalneeds);\r",
							"});\r",
							"\r",
							"// Проверяем, что переменные коллекции сохраняются\r",
							"pm.test(\"Collection variables are saved correctly\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(pm.collectionVariables.get(\"var_firstname\")).to.eql(jsonData.booking.firstname);\r",
							"    pm.expect(pm.collectionVariables.get(\"var_lastname\")).to.eql(jsonData.booking.lastname);\r",
							"    pm.expect(pm.collectionVariables.get(\"var_bookingid\")).to.eql(jsonData.bookingid);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jerma\",\r\n    \"lastname\" : \"Svenska\",\r\n    \"totalprice\" : 276,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2025-04-01\",\r\n        \"checkout\" : \"2025-01-08\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						""
					]
				},
				"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
			},
			"response": []
		},
		{
			"name": "PUT - Booking - UpdateBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const token = pm.collectionVariables.get(\"auth_token\");\r",
							"const bookingid = pm.collectionVariables.get(\"var_bookingid\");\r",
							"\r",
							"if (!token || !bookingid) {\r",
							"    console.error(\"Variables error.\");\r",
							"} else {\r",
							"    console.log(\"Used token:\", token);\r",
							"    console.log(\"Used Id:\", bookingid);\r",
							"\r",
							"    const url = `https://restful-booker.herokuapp.com/booking/${bookingid}`;\r",
							"    pm.request.url = url;\r",
							"    console.log(\"Set URL:\", url);\r",
							"\r",
							"    pm.request.headers.add({\r",
							"        key: \"Cookie\",\r",
							"        value: `token=${token}`\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверки ->\r",
							"\r",
							"// Проверяем, что код ответа 200 (успешное обновление бронирования)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверяем, что тело ответа содержит обновленные данные\r",
							"pm.test(\"Response contains updated booking details\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const requestData = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"    pm.expect(jsonData.firstname).to.eql(requestData.firstname);\r",
							"    pm.expect(jsonData.lastname).to.eql(requestData.lastname);\r",
							"    pm.expect(jsonData.totalprice).to.eql(requestData.totalprice);\r",
							"    pm.expect(jsonData.depositpaid).to.eql(requestData.depositpaid);\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(requestData.bookingdates.checkin);\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(requestData.bookingdates.checkout);\r",
							"    pm.expect(jsonData.additionalneeds).to.eql(requestData.additionalneeds);\r",
							"});\r",
							"\r",
							"// Проверяем, что заголовок \"Content-Type\" — JSON\r",
							"pm.test(\"Content-Type is JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"// Проверяем, что аутентификационный токен использован\r",
							"pm.test(\"Auth token is included in request\", function () {\r",
							"    const token = pm.collectionVariables.get(\"auth_token\");\r",
							"    pm.expect(token).to.be.a(\"string\").and.to.have.length.above(0);\r",
							"\r",
							"    const headers = pm.request.headers.all();\r",
							"    const hasAuthHeader = headers.some(header => header.key === \"Cookie\" && header.value.includes(`token=${token}`));\r",
							"\r",
							"    pm.expect(hasAuthHeader).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jerma\",\r\n    \"lastname\" : \"Svenska\",\r\n    \"totalprice\" : 276,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2025-04-01\",\r\n        \"checkout\" : \"2025-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						""
					]
				},
				"description": "Generated from cURL: curl -X PUT \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
			},
			"response": []
		},
		{
			"name": "GET - Booking - GetBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const bookingid = pm.collectionVariables.get(\"var_bookingid\");\r",
							"\r",
							"if (!bookingid) {\r",
							"    console.error(\"Variable not found.\");\r",
							"} else {\r",
							"    console.log(\"Used Id:\", bookingid);\r",
							"    const url = `https://restful-booker.herokuapp.com/booking/${bookingid}`;\r",
							"    pm.request.url = url;\r",
							"    console.log(\"Set URL:\", url);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверки ->\r",
							"\r",
							"// Проверяем, что код ответа 200 (успешное получение бронирования)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверяем, что тело ответа содержит нужные поля\r",
							"pm.test(\"Response contains expected booking details\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"firstname\");\r",
							"    pm.expect(jsonData).to.have.property(\"lastname\");\r",
							"    pm.expect(jsonData).to.have.property(\"totalprice\");\r",
							"    pm.expect(jsonData).to.have.property(\"depositpaid\");\r",
							"    pm.expect(jsonData).to.have.property(\"bookingdates\");\r",
							"    pm.expect(jsonData.bookingdates).to.have.property(\"checkin\");\r",
							"    pm.expect(jsonData.bookingdates).to.have.property(\"checkout\");\r",
							"});\r",
							"\r",
							"// Проверяем, что заголовок \"Content-Type\" — JSON\r",
							"pm.test(\"Content-Type is JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"// Проверяем, что переданный `bookingid` совпадает с запрошенным\r",
							"pm.test(\"Requested booking ID matches response\", function () {\r",
							"    const bookingid = pm.collectionVariables.get(\"var_bookingid\");\r",
							"    pm.expect(pm.request.url.toString()).to.include(`/booking/${bookingid}`);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						""
					]
				},
				"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking/"
			},
			"response": []
		},
		{
			"name": "DELETE - Booking - DeleteBooking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const token = pm.collectionVariables.get(\"auth_token\");\r",
							"const bookingid = pm.collectionVariables.get(\"var_bookingid\");\r",
							"\r",
							"if (!token || !bookingid) {\r",
							"    console.error(\"Variables error.\");\r",
							"} else {\r",
							"    console.log(\"Used token:\", token);\r",
							"    console.log(\"Used Id:\", bookingid);\r",
							"\r",
							"    const url = `https://restful-booker.herokuapp.com/booking/${bookingid}`;\r",
							"    pm.request.url = url;\r",
							"    console.log(\"Set URL:\", url);\r",
							"\r",
							"    pm.request.headers.add({\r",
							"        key: \"Cookie\",\r",
							"        value: `token=${token}`\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверки ->\r",
							"\r",
							"// Проверяем, что код ответа 201 (успешное удаление)\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// Проверяем, что тело ответа содержит слово \"Created\"\r",
							"pm.test('Response body contains \"Created\"', function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
							"});\r",
							"\r",
							"// Проверяем, что заголовок \"Content-Type\" присутствует\r",
							"pm.test(\"Content-Type header exists\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"// Проверяем, что бронирование действительно удалено (повторный GET должен вернуть 404)\r",
							"pm.test(\"Booking is deleted (GET should return 404)\", function () {\r",
							"    const bookingid = pm.collectionVariables.get(\"var_bookingid\");\r",
							"\r",
							"    pm.sendRequest({\r",
							"        url: `https://restful-booker.herokuapp.com/booking/${bookingid}`,\r",
							"        method: \"GET\"\r",
							"    }, function (err, res) {\r",
							"        pm.expect(res.code).to.equal(404);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						""
					]
				},
				"description": "Generated from cURL: curl -X DELETE \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Cookie: token=abc123'"
			},
			"response": []
		},
		{
			"name": "GET - Booking - CheckGetBookingAfterDeleteAction",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const bookingid = pm.collectionVariables.get(\"var_bookingid\");\r",
							"\r",
							"if (!bookingid) {\r",
							"    console.error(\"Variable not found.\");\r",
							"} else {\r",
							"    console.log(\"Used Id:\", bookingid);\r",
							"    const url = `https://restful-booker.herokuapp.com/booking/${bookingid}`;\r",
							"    pm.request.url = url;\r",
							"    console.log(\"Set URL:\", url);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверки ->\r",
							"\r",
							"// Проверяем, что код ответа 404 (не найдено)\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"// Проверяем, что тело ответа содержит \"Not Found\"\r",
							"pm.test('Response body contains \"Not Found\"', function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Not Found\");\r",
							"});\r",
							"\r",
							"// Проверяем, что заголовок \"Content-Type\" присутствует\r",
							"pm.test(\"Content-Type header exists\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"// Проверяем, что переменная bookingid используется правильно\r",
							"pm.test(\"Booking ID is valid\", function () {\r",
							"    const bookingid = pm.collectionVariables.get(\"var_bookingid\");\r",
							"    pm.expect(bookingid).to.not.be.null;\r",
							"    pm.expect(bookingid).to.not.be.undefined;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						""
					]
				},
				"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking/"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "auth_token",
			"value": ""
		},
		{
			"key": "var_firstname",
			"value": ""
		},
		{
			"key": "var_lastname",
			"value": ""
		},
		{
			"key": "var_bookingid",
			"value": ""
		}
	]
}